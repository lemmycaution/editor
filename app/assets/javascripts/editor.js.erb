//= require ./ace/ace-uncompressed
//= require ./ace/mode-html
//= require ./ace/theme-tomorrow_night
//= require tinymce-jquery
var editor = window.editor = (function(editor){
	
	var inited = editor.inited = false;					
														
	var currents = editor.currents = {};
	var editables = editor.editables = <%= Editor.editables.to_json %>;
	for( var i in editables){
		editor.currents[editables[i]] = "visual";
	}

	var mce_options = editor.mce_options = {cleanup:0, format:'raw'};

	var aces = editor.aces = {};
	var _textareas = editor._textareas = [];	
	var mces = editor.mces = {};		

	var switchEditor = editor.switchEditor =  function(elm,ref) {

		if (currents[ref]!=elm) {
			
			currents[ref] = elm;
			
			$(".switches a[ref="+ref+"].active").removeClass('active');			
			$(".switches a[ref="+ref+"]." + elm).addClass('active');
			
			if(elm=="visual"){
				// for( var i in editor._textareas) {

					// var _textarea = editor._textareas[i];

					editor.mces[ref].setContent( 
						editor.aces[ref].getSession().getValue(), 
						mce_options 
					);

				// }
				$(".mceEditor#"+ref+"_parent").show();		
				$(".ace_editor#"+ref+"_ace").hide();
			}else{
				// for( var i in editor._textareas) {
					// var _textarea = editor._textareas[i];
					editor.aces[ref].getSession().setValue( 
						editor.mces[ref].getContent(
							mce_options
						) 
					);

				// }
				$(".mceEditor#"+ref+"_parent").hide();		
				$(".ace_editor#"+ref+"_ace").show();
			}
			
		}
	}
	
	var init = editor.init = function() {

		if(!editor.inited){
			
			$(".translations a").click(function(){
				var locale = $(this).prop('href').split("#")[1];
				$("fieldset.translation").hide();
				$("fieldset.translation#"+locale).show();
				$(".translations a.active").removeClass('active');
				$(this).addClass('active');
				return false;
			});

			$(".translations a:first").click();

			var editables = <%= Editor.editables.to_json %>

			var t = editor.t = false;
		
			for(var i=0; i < editables.length; i++){
				if ( $("#"+editables[i]+"_body").length > 0 ){
					t = editables[i];
					initialize(t);
				}
			}

		}
		
		editor.inited = true;
	}
	
	var initialize = editor.initialize = function(t) {
		
			// var textarea = editor.textarea = typeof editor.textarea!=="undefined" ? editor.textarea : '#' + t + '_body';
			var textarea = "#" + t + "_body";

			// var $textarea = editor.$textarea = $(textarea);
			var $textarea = $(textarea);
			
			var container = $textarea.parents("fieldset.inputs");
		
			var _textarea = textarea.replace(/#/,"");
			editor._textareas.push(_textarea);
		
			if( $textarea.length > 0 ) {
			
				$textarea.parents('form').unbind('submit').submit(function() {
					for( var i in editor._textareas)  { 
						_textarea = editor._textareas[i];
						var rawVal = currents[_textarea] == "code" ? editor.aces[_textarea].getSession().getValue() : editor.mces[_textarea].getContent(mce_options);
						editor.mces[_textarea].remove();
						$(_textarea).hide();
						$(_textarea).val(rawVal);
						tinymce = null;
					}
					return true;
				});

				$('<div class="switches">'+
				'<a class="visual" data-ref="'+_textarea+'">visual</a>'+
				'<a class="code" data-ref="'+_textarea+'">code</a>'+		
				'</div>').insertAfter( container.find("label[for="+_textarea+"]")	);

				$(".switches a").unbind('click').click(function(){
					switchEditor($(this).prop("class").replace("active",""), $(this).data("ref"));
				});
			
				$(textarea+"_input").append($("<div id=\""+_textarea+"_ace\"></div>"));

				// var ace = editor.ace = window.ace.edit(_textarea+"_ace");
				var ace = window.ace.edit(_textarea+"_ace");
				editor.aces[_textarea] = ace;

				var HtmlMode = require("ace/mode/html").Mode;
				ace.getSession().setMode(new HtmlMode());

				ace.setTheme("ace/theme/tomorrow_night");

				ace.getSession().setValue( $textarea.val() );

				ace.getSession().on('change', function(){
				  $textarea.val( ace.getSession().getValue() );
				});

				ace.renderer.setHScrollBarAlwaysVisible(false);

				$textarea.tinymce({
					theme: 'advanced',
					skin:"cirkuit",

					plugins : "spellchecker,safari,pagebreak,style,layer,save,advlink,advlist,iespell,inlinepopups,insertdatetime,contextmenu,directionality,noneditable,nonbreaking,xhtmlxtras,template", 
					// Theme options 
					theme_advanced_buttons1 : "formatselect,fontsizeselect,forecolor,|,bold,italic,strikethrough,|,bullist,numlist,|,justifyleft,justifycenter,justifyright,|,link,unlink,|,image", 
					theme_advanced_buttons2 : "", 
					theme_advanced_buttons3 : "", 
					theme_advanced_toolbar_location : "top", 
					theme_advanced_toolbar_align : "left",
					width:"77%",
					height:"400px",

					apply_source_formatting: 0,
					convert_fonts_to_spans: 0,
					convert_newlines_to_brs: 0,
					// custom_elements:
					doctype: "<!DOCTYPE html>",
					content_css: "<%= asset_path "application.css" %>",
					element_format: 'raw',
					encoding: '',
					// entities: ,
					entity_encoding: 'raw',
					extended_valid_elements : "script[type|src],iframe[src|style|width|height|scrolling|marginwidth|marginheight|frameborder]",
					fix_list_elements: 0,
					// font_size_classes:
					// font_size_style_values:
					forced_root_block: '',
					force_br_newlines: 0,
					force_hex_style_colors: 0,
					force_p_newlines: 1,
					// formats:
					// indentation:
					// inline_styles:
					// invalid_elements:
					preformatted: 1,
					remove_linebreaks: 0,
					// style_formats:
					// valid_children:
					valid_elements : "**",
					verify_css_classes: 0,
					verify_html: 0,
					cleanup: 0,
					cleanup_on_startup: 0,
					validate: 0,
					convert_urls : 0,

					setup : function(ed) {
						ed.onBeforeSetContent.add(function(ed, o) {
							o.content = o.content.replace(/&lt;/gi, "<");
							o.content = o.content.replace(/&gt;/gi, ">"); 
							o.content = o.content.replace(/<body>/gi, ""); 
							o.content = o.content.replace(/<\/body>/gi, ""); 						
						});
						ed.onGetContent.add(function(ed, o) {
							o.content = o.content.replace(/&lt;/gi, "<");
							o.content = o.content.replace(/&gt;/gi, ">");
							o.content = o.content.replace(/<body>/gi, ""); 
							o.content = o.content.replace(/<\/body>/gi, "");						
						});
						ed.onSetContent.add(function(ed, o) {
							o.content = o.content.replace(/&lt;/gi, "<");
							o.content = o.content.replace(/&gt;/gi, ">");
							o.content = o.content.replace(/<body>/gi, ""); 
							o.content = o.content.replace(/<\/body>/gi, "");						
						});
					},

					oninit : function(){ 
						// var mce = editor.mce = $textarea.tinymce();
						var mce = $textarea.tinymce();
						editor.mces[_textarea] = mce;
						// editor.mce.setContent( 
						// 							editor.ace.getSession().getValue(), 
						// 							mce_options 
						// 						);
						mce.setContent( 
							editor.aces[_textarea].getSession().getValue(), 
							mce_options 
						);
					}
							
				});

			}
		
	}
	
	var reload = editor.reload = function() {
		$(".switches").remove();
		init();
	}
	
	return editor;
	
})(editor || {});