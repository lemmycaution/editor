//= require ./ace/ace-uncompressed
//= require ./ace/mode-html
//= require ./ace/theme-tomorrow_night
//= require tinymce-jquery
var editor = window.editor = (function(editor){
	
	var inited = editor.inited = false;					
														
	var current = editor.current = "visual";

	var mce_options = editor.mce_options = {cleanup:0, format:'raw'};

	var switchEditor = editor.switchEditor =  function(elm) {

		if (current!=elm) {
			
			current = elm;
			
			$(".switches a.active").removeClass('active');			
			$(".switches a." + elm).addClass('active');
			
			if(elm=="visual"){
					editor.mce.setContent( 
						editor.ace.getSession().getValue(), 
						mce_options 
					);
					$(".mceEditor").show();		
					$(editor.textarea+"_ace").hide();
			}else{
					editor.ace.getSession().setValue( 
						editor.mce.getContent(
							mce_options
						) 
					);
					$(".mceEditor").hide();		
					$(editor.textarea+"_ace").show();
			}
			
		}
	}
	
	var init = editor.init = function() {

		if(!editor.inited){

			var editables = <%= Editor.editables.to_json %>

			var t = editor.t = false;
		
			for(var i=0; i < editables.length; i++){
				if ( $("#"+editables[i]+"_body").length > 0 ){
					t = editables[i];
					break;
				}
			}

			var textarea = editor.textarea = typeof editor.textarea!=="undefined" ? editor.textarea : '#' + t + '_body';

			var $textarea = editor.$textarea = $(textarea);
		
			var _textarea = textarea.replace(/#/,"");
		
			if( $textarea.length > 0 ) {
			
				$textarea.parents('form').submit(function() {
					var rawVal = current=="code" ? editor.ace.getSession().getValue() : editor.mce.getContent(mce_options);
					editor.mce.remove();
					$textarea.hide();
					$textarea.val(rawVal);
					tinymce = null;
					return true;
				});

				$('<div class="switches">'+
				'<a class="visual">visual</a>'+
				'<a class="code">code</a>'+		
				'</div>').insertAfter( $("label[for="+_textarea+"]")	);

				$(".switches a").click(function(){
					switchEditor($(this).prop("class"));
				});
			
				$(textarea+"_input").append($("<div id=\""+_textarea+"_ace\"></div>"));

				var ace = editor.ace = window.ace.edit(_textarea+"_ace");

				var HtmlMode = require("ace/mode/html").Mode;
				ace.getSession().setMode(new HtmlMode());

				ace.setTheme("ace/theme/tomorrow_night");

				ace.getSession().setValue( $textarea.val() );

				ace.getSession().on('change', function(){
				  $textarea.val( ace.getSession().getValue() );
				});

				ace.renderer.setHScrollBarAlwaysVisible(false);

				$textarea.tinymce({
					theme: 'advanced',
					skin:"cirkuit",

					plugins : "spellchecker,safari,pagebreak,style,layer,save,advlink,advlist,iespell,inlinepopups,insertdatetime,contextmenu,directionality,noneditable,nonbreaking,xhtmlxtras,template", 
					// Theme options 
					theme_advanced_buttons1 : "formatselect,fontsizeselect,forecolor,|,bold,italic,strikethrough,|,bullist,numlist,|,justifyleft,justifycenter,justifyright,|,link,unlink,|,image", 
					theme_advanced_buttons2 : "", 
					theme_advanced_buttons3 : "", 
					theme_advanced_toolbar_location : "top", 
					theme_advanced_toolbar_align : "left",
					width:"77%",
					height:"400px",

					apply_source_formatting: 0,
					convert_fonts_to_spans: 0,
					convert_newlines_to_brs: 0,
					// custom_elements:
					doctype: "<!DOCTYPE html>",
					content_css: "<%= asset_path "application.css" %>",
					element_format: 'raw',
					encoding: '',
					// entities: ,
					entity_encoding: 'raw',
					extended_valid_elements : "script[type|src],iframe[src|style|width|height|scrolling|marginwidth|marginheight|frameborder]",
					fix_list_elements: 0,
					// font_size_classes:
					// font_size_style_values:
					forced_root_block: '',
					force_br_newlines: 0,
					force_hex_style_colors: 0,
					force_p_newlines: 1,
					// formats:
					// indentation:
					// inline_styles:
					// invalid_elements:
					preformatted: 1,
					remove_linebreaks: 0,
					// style_formats:
					// valid_children:
					valid_elements : "**",
					verify_css_classes: 0,
					verify_html: 0,
					cleanup: 0,
					cleanup_on_startup: 0,
					validate: 0,
					convert_urls : 0,

					setup : function(ed) {
						ed.onBeforeSetContent.add(function(ed, o) {
							o.content = o.content.replace(/&lt;/gi, "<");
							o.content = o.content.replace(/&gt;/gi, ">"); 
							o.content = o.content.replace(/<body>/gi, ""); 
							o.content = o.content.replace(/<\/body>/gi, ""); 						
						});
						ed.onGetContent.add(function(ed, o) {
							o.content = o.content.replace(/&lt;/gi, "<");
							o.content = o.content.replace(/&gt;/gi, ">");
							o.content = o.content.replace(/<body>/gi, ""); 
							o.content = o.content.replace(/<\/body>/gi, "");						
						});
						ed.onSetContent.add(function(ed, o) {
							o.content = o.content.replace(/&lt;/gi, "<");
							o.content = o.content.replace(/&gt;/gi, ">");
							o.content = o.content.replace(/<body>/gi, ""); 
							o.content = o.content.replace(/<\/body>/gi, "");						
						});
					},

					oninit : function(){ 
						var mce = editor.mce = $textarea.tinymce();
						editor.mce.setContent( 
							editor.ace.getSession().getValue(), 
							mce_options 
						);
					}
							
				});

			}
		}
		
		editor.inited = true;
	}
	
	var reload = editor.reload = function() {
		$(".switches").remove();
		init();
	}
	
	return editor;
	
})(editor || {});